package Gym1;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

public class SuscripcionRepositoryImpl implements IRepository<Suscripcion> {
    private List<Suscripcion> entities = new ArrayList<>();
    private java.sql.Connection con;
    public SuscripcionRepositoryImpl(){
        this.con = GymNetworkService.getConnection();
    }

    /**
     * Se encarga de mapear um registro de la base de datos para converirlo en un objeto User
     * @param rs
     * @return Un objeto User
     * @throws SQLException
     */
    public Suscripcion bdToEntity(ResultSet rs) throws SQLException {

        return new Suscripcion(rs.getInt("id"), rs.getString("tipo_suscripcion"), rs.getInt("precio"), rs.getString("fecha"));
    }

    /**
     * Consulta todos los registros de la tabla users
     * @return Una lista de objetos User
     * @throws SQLException
     */
    public List<Suscripcion> findAll() throws SQLException {

        List<Suscripcion> suscripciones = new ArrayList<>();

        Statement st = this.con.createStatement();
        //Ejecutar la consulta, guardando los datos devueltos en un Resulset
        ResultSet rs = st.executeQuery("SELECT * FROM Suscripciones ORDER BY tipo_suscripcion, precio, fecha");

        while(rs.next()){
            //Mapeamos el registro de la BD en un User
            Suscripcion u =  bdToEntity(rs);
            //Añadir el User al conjunto de users
            suscripciones.add(u);
        }
        return suscripciones;
    }
    //De momento estos tres métodos no hacen nada pero hacen falta para poder probar findAll
    public Suscripcion findById(int id) throws SQLException {
        PreparedStatement st = con.prepareStatement("SELECT * FROM Suscripciones WHERE id = ? ");
        st.setInt(1, id);

        ResultSet rs = st.executeQuery();
        Suscripcion u = null;
        //Si la consulta devuelve algún resultado ...
        if (rs.next()){
            // ... lo mapeamos a un objeto Usuario
            u = bdToEntity(rs);
        }
        //Devolvemos el Usuario ya mapeado
        return u;
    }

    public void save(Suscripcion suscripcion) throws SQLException{
        if (suscripcion.getId() == -1){
            ResultSet rs;
            PreparedStatement st = null;
            String query = "INSERT INTO Suscripciones (id, tipo_suscripcion, precio, fecha) VALUES (?, ?, ?, ?)";
            //Fijáos en Statement.RETURN_GENERATED_KEYS. Permite recuperar el campo ID autogenerado por MySql
            st = con.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);

            st.setInt(1, suscripcion.getId());
            st.setString(2, suscripcion.getTipoSuscripcion());
            st.setInt(3, suscripcion.getprecio());
            st.setString(4, suscripcion.getFecha());


            st.executeUpdate();

            //Recuperar el id autogenerado
            rs = st.getGeneratedKeys();
            //Este ResultSet solo puede contener un registro: el ID autogenerado

            if (rs.next()){
                //Ahora ya sabemos cuál es el nuevo id del Usuario
                suscripcion.setId(rs.getInt(1));
                System.out.println("Autogenerated ID:  " + suscripcion.getId());
            }
        }else{
            PreparedStatement st = con.prepareStatement("UPDATE Suscripciones SET id = ?, tipo_suscripcion = ?, precio = ?, fecha = ? WHERE id = ?");
            st.setInt(1, suscripcion.getId());
            st.setString(2, suscripcion.getTipoSuscripcion());
            st.setInt(3, suscripcion.getprecio());
            st.setString(4, suscripcion.getFecha());

            st.executeUpdate();
        }

    }

    public void delete(Suscripcion suscripcion) throws SQLException {
        PreparedStatement st = con.prepareStatement("DELETE FROM Suscripciones WHERE id = ?");
        st.setInt(1, suscripcion.getId());
        st.executeUpdate();
        st.close();
    }


    public void deleteById(int id) throws SQLException {
        PreparedStatement st = con.prepareStatement("DELETE FROM Suscripciones WHERE id = ? ");
        st.setInt(1, id);

        ResultSet rs = st.executeQuery();

    }
}